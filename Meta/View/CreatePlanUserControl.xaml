<UserControl x:Class="Meta.View.UserControl2"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Meta.View"
             mc:Ignorable="d" 
             d:DesignHeight="1050" d:DesignWidth="1500">
    
    <UserControl.Resources>
        
        <!--#region PlanButton8H-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="White"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="PlanButton8H" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        
        <!--#region PriorityButton-->
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#5Bc65D"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#5Bc65D"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#55b357"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#55b357"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#4fa550"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#4fa550"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="PriorityButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="0,5,5,0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        
        <!--#region TimeOfDayButton-->
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#C0C0C0"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#C0C0C0"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#A9A9A9"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#A9A9A9"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#808080"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#808080"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="TimeOfDayButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        
        <!--#region TextBoxInputUC2-->
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#4b4b4b"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#1f1f1f"/>
        <Style x:Key="TextboxInputUC2" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Padding" Value="5,1,1,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
    </UserControl.Resources>

    <Grid Background="White" Margin="50,50,50,-40">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="80"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.Column="0"  Background="Transparent">
            <TextBlock Text="Create plan" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="25" FontWeight="SemiBold"/>
        </Grid>

        <Grid Grid.ColumnSpan="2" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                <Label Content="Monday, 07.03.2023." FontSize="25" VerticalAlignment="Center" HorizontalAlignment="Center" Name="PlanMainDate"></Label>
            </Grid>

            <Grid Grid.Row="1" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Background="Transparent">
                    <StackPanel Orientation="Horizontal">
                        <Button Style="{StaticResource TimeOfDayButton}" Width="100" Height="40" Content="Morning" Margin="0,5,10,0" Uid="Morning" Click="ChangeTime"/>
                        <Button Style="{StaticResource TimeOfDayButton}" Width="100" Height="40" Content="Day" Margin="0,5,10,0" Uid="Day" Click="ChangeTime"/>
                        <Button Style="{StaticResource TimeOfDayButton}" Width="100" Height="40" Content="Night" Margin="0,5,0,0" Uid="Night" Click="ChangeTime"/>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="2" Name="PlanUserControlGrid">
                    <!--#region Morning-->
                    <Grid Name="GridMorning" Visibility="Visible">
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                        </Grid.RowDefinitions>

                        <local:PlanUserControl Hour="05:00" BackgroundBorder="#5BC65D" Grid.Row="0" Uid="05"/>
                        <local:PlanUserControl Hour="06:00" BackgroundBorder="#5BC65D" Grid.Row="1" Uid="06"/>
                        <local:PlanUserControl Hour="07:00" BackgroundBorder="#5BC65D" Grid.Row="2" Uid="07"/>
                        <local:PlanUserControl Hour="08:00" BackgroundBorder="#5BC65D" Grid.Row="3" Uid="08"/>
                        <local:PlanUserControl Hour="09:00" BackgroundBorder="#5BC65D" Grid.Row="4" Uid="09"/>
                        <local:PlanUserControl Hour="10:00" BackgroundBorder="#5BC65D" Grid.Row="5" Uid="10"/>
                    </Grid>
                    <!--#endregion-->

                    <!--#region Day-->
                    <Grid Name="GridDay" Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                        </Grid.RowDefinitions>

                        <local:PlanUserControl Hour="11:00" BackgroundBorder="#5BC65D" Grid.Row="0" Uid="11"/>
                        <local:PlanUserControl Hour="12:00" BackgroundBorder="#5BC65D" Grid.Row="1" Uid="12"/>
                        <local:PlanUserControl Hour="13:00" BackgroundBorder="#5BC65D" Grid.Row="2" Uid="13"/>
                        <local:PlanUserControl Hour="14:00" BackgroundBorder="#5BC65D" Grid.Row="3" Uid="14"/>
                        <local:PlanUserControl Hour="15:00" BackgroundBorder="#5BC65D" Grid.Row="4" Uid="15"/>
                        <local:PlanUserControl Hour="16:00" BackgroundBorder="#5BC65D" Grid.Row="5" Uid="16"/>
                    </Grid>
                    <!--#endregion-->

                    <!--#region Night-->
                    <Grid Name="GridNight" Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                            <RowDefinition MinHeight="80"/>
                        </Grid.RowDefinitions>
                        <local:PlanUserControl Hour="17:00" BackgroundBorder="#5BC65D" Grid.Row="0" Uid="17"/>
                        <local:PlanUserControl Hour="18:00" BackgroundBorder="#5BC65D" Grid.Row="1" Uid="18"/>
                        <local:PlanUserControl Hour="19:00" BackgroundBorder="#5BC65D" Grid.Row="2" Uid="19"/>
                        <local:PlanUserControl Hour="20:00" BackgroundBorder="#5BC65D" Grid.Row="3" Uid="20"/>
                        <local:PlanUserControl Hour="21:00" BackgroundBorder="#5BC65D" Grid.Row="4" Uid="21"/>
                        <local:PlanUserControl Hour="22:00" BackgroundBorder="#5BC65D" Grid.Row="5" Uid="22"/>
                    </Grid>
                    <!--#endregion-->
                </Grid>
            </Grid>
        </Grid>

        <Grid Grid.Column="2" Grid.Row="1" Margin="0,90,0,0">

            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="170"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Name="DateStackPanel">
                <TextBlock Text="Schedule a date" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="17" FontWeight="SemiBold" Margin="0,0,0,0" Padding="10" TextAlignment="Left"/>
            </StackPanel>

            <StackPanel Grid.Row="1">
                <TextBlock Text="Set a title" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="17" FontWeight="SemiBold" Margin="0,0,0,0" Padding="10" TextAlignment="Left"/>
                <TextBox Style="{DynamicResource TextboxInputUC2}" Width="300" Height="40" HorizontalAlignment="Left" Margin="10,0,0,0" FontSize="18" VerticalContentAlignment="Top" Padding="5" Uid="Title"
                             TextWrapping="Wrap" AcceptsReturn="True" TextAlignment="Justify" Name="PlanTitle"></TextBox>
            </StackPanel>

            <StackPanel Grid.Row="2">
                <TextBlock Text="Main event of the day" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="17" FontWeight="SemiBold" Margin="0,0,0,0" Padding="10" TextAlignment="Left"/>
                <TextBox Style="{DynamicResource TextboxInputUC2}" Width="300" Height="40" HorizontalAlignment="Left" Margin="10,0,0,0" FontSize="18" VerticalContentAlignment="Top" Padding="5" Uid="MainEvent"
                             TextWrapping="Wrap" AcceptsReturn="True" TextAlignment="Justify" Name="PlanMainEvent"></TextBox>
            </StackPanel>

            <StackPanel Grid.Row="3">
                <TextBlock Text="Make a description" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="17" FontWeight="SemiBold" Margin="0,0,0,0" Padding="10" TextAlignment="Left"/>
                <TextBox Style="{DynamicResource TextboxInputUC2}" Width="300" Height="127" HorizontalAlignment="Left" Margin="10,0,0,0" FontSize="18" VerticalContentAlignment="Top" Padding="5" Uid="Description"
                             TextWrapping="Wrap" AcceptsReturn="True" TextAlignment="Justify" Name="PlanDescription"></TextBox>
            </StackPanel>

        </Grid>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,40,30" Grid.Row="1" Grid.Column="2">
            <Button Style="{StaticResource TimeOfDayButton}" Height="50" Width="130" Content="Cancel" Margin="0,5,10,0" Uid="Cancel" Click="ResetPlan"/>
            <Button Style="{StaticResource TimeOfDayButton}" Height="50" Width="130" Content="Create" Margin="0,5,10,0" Uid="Create" Click="CreatePlan"/>
        </StackPanel>
    </Grid>

</UserControl>
